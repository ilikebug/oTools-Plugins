(()=>{var e={16928:e=>{"use strict";e.exports=require("path")},45528:(e,n,t)=>{const s=t(58611),r=t(87016);t(79896),t(16928);const o=process.env.OAUTH_PORT||Math.floor(55536*Math.random())+1e4;process.env.OAUTH_PORT=o.toString();const a=s.createServer((e,n)=>{if("/callback"===r.parse(e.url,!0).pathname){if(n.setHeader("Access-Control-Allow-Origin","*"),n.setHeader("Access-Control-Allow-Methods","GET, POST, OPTIONS"),n.setHeader("Access-Control-Allow-Headers","Content-Type"),"OPTIONS"===e.method)return n.writeHead(200),void n.end();n.writeHead(200,{"Content-Type":"text/html"}),n.end("\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <title>Google Drive Authorization</title>\n  <style>\n    body {\n      font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      height: 100vh;\n      margin: 0;\n      background: #f5f6fa;\n    }\n    .container {\n      text-align: center;\n      padding: 40px;\n      background: white;\n      border-radius: 12px;\n      box-shadow: 0 4px 24px rgba(0,0,0,0.1);\n    }\n    .success {\n      color: #10b981;\n    }\n    .error {\n      color: #ef4444;\n    }\n  </style>\n</head>\n<body>\n  <div class=\"container\">\n    <div id=\"message\">Processing authorization...</div>\n  </div>\n\n  <script>\n    // Parse URL parameters\n    const urlParams = new URLSearchParams(window.location.search);\n    const code = urlParams.get('code');\n    const error = urlParams.get('error');\n    \n    const messageElement = document.getElementById('message');\n    \n    if (error) {\n      messageElement.textContent = 'Authorization failed: ' + error;\n      messageElement.className = 'error';\n      \n      // Send error message to parent window\n      if (window.opener) {\n        window.opener.postMessage({\n          type: 'GOOGLE_AUTH_ERROR',\n          error: error\n        }, '*');\n      }\n    } else if (code) {\n      messageElement.textContent = 'Authorization successful! You can close this window.';\n      messageElement.className = 'success';\n      \n      // Send success message to parent window\n      if (window.opener) {\n        window.opener.postMessage({\n          type: 'GOOGLE_AUTH_SUCCESS',\n          code: code\n        }, '*');\n      }\n    } else {\n      messageElement.textContent = 'Invalid authorization response';\n      messageElement.className = 'error';\n    }\n    \n    // Close window after 2 seconds\n    setTimeout(() => {\n      window.close();\n    }, 2000);\n  <\/script>\n</body>\n</html>\n")}else n.writeHead(404),n.end("Not Found")});a.listen(o,()=>{e.exports.port=o}),process.on("SIGINT",()=>{a.close(()=>{process.exit(0)})}),e.exports=a},58611:e=>{"use strict";e.exports=require("http")},79896:e=>{"use strict";e.exports=require("fs")},87016:e=>{"use strict";e.exports=require("url")}},n={};(function t(s){var r=n[s];if(void 0!==r)return r.exports;var o=n[s]={exports:{}};return e[s](o,o.exports,t),o.exports})(45528)})();